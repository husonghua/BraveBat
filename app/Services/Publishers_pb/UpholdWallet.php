<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: channel_response.proto

namespace Publishers_pb;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>publishers_pb.UpholdWallet</code>
 */
class UpholdWallet extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.publishers_pb.UpholdWalletState wallet_state = 1;</code>
     */
    protected $wallet_state = 0;
    /**
     * Generated from protobuf field <code>string address = 2;</code>
     */
    protected $address = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $wallet_state
     *     @type string $address
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ChannelResponse::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.publishers_pb.UpholdWalletState wallet_state = 1;</code>
     * @return int
     */
    public function getWalletState()
    {
        return $this->wallet_state;
    }

    /**
     * Generated from protobuf field <code>.publishers_pb.UpholdWalletState wallet_state = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setWalletState($var)
    {
        GPBUtil::checkEnum($var, \Publishers_pb\UpholdWalletState::class);
        $this->wallet_state = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>string address = 2;</code>
     * @return string
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * Generated from protobuf field <code>string address = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setAddress($var)
    {
        GPBUtil::checkString($var, True);
        $this->address = $var;

        return $this;
    }

}

